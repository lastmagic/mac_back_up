기본적으로 class 를 이용해 linked list 를 구현한다.

private:

	node
	chain
	
public:

	Insert(a, b)
>> a, b    a를 찾는 기능을 추가 (first 부터 찾아가면 될것으로 예상)

	insertBack(int a)
last에 노드 추가하는 형식으로 진행할것. 단 ,data가 여러개 들어 올 수 있으므로
link를 바꾸는 것 이외에 더 빠른 연산이 있을지 생각할것
아니면 받는 node 들로 리스트를 구성 한 다음 그 list를 갖다 붙이는 것도 빠를 수 있을것으로 예상됨

	insertFront(int a)
역시 맨앞에 x,y,z삽입

여기서 경우의 수는 2가지 존재 (나중에 구성 후 선택할것)

1. 여러 개 받았을 경우 각각의 node 를 계속해서 추가 해 나가는 형식으로 구성

2. 여러 개 받았을 경우 받은 node들을 list 로 구성 (first ,last 존재) 
이 후  원하는 곳에 first 와 last를 이용해 list 채로 추가

==========================================================================

	delete(int a)
first 부터 a를 찾아 나가고 찾았을 경우 간단하게 delete > 기존의 방식을 따를것

	print()
리스트 내용 출력 first부터 가면서 출력만 하면 됨


	reverse()
이번 과제의 핵심으로 생각되는 함수임
책에 있는 논리를 그대로 사용해야 할 것으로 예상된다
배열과 다르게 list자체를 재구성해야한다는것이 문제임
처음 생각나는 논리는 last 부터 읽으면서 새로운 list를 구성하는것.
뒤로 가는것이 불가하다고 생각된다로 doubly linked list 로 구성할 경우 해결될것


